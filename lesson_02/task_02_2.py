# 2. Дан список строк. Выполнить обработку списка (смотри текст задания) и сформировать на его основе
# строку
# Техническое задание:
#
# Список может содержать произвольное кол-во элементов. Все его элементы - строки.
# Примеры исходного списка:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов
# Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
# Строки-элементы списка:
# Время: любое целое число, без привязки к ограничениям на 60 минут/секунд и 24 часа, т.е. '79', 'минут' - это
# корректно. Пример: "1" "12" "75"
# Температуры: любое целое число. Начинается со знаков + или -, но может и быть без знака. Пример: "+5", "-7",
# "12";
# Слова: просто символьные строки.
# в начале и конце строк-чисел пробелов нет.
# строки-числа и строки-слова не обязательно идут точно через один.

# Создать новый список и наполнить его элементами по схеме:
# Обособить каждое целое число (исходного списка) кавычками (добавить элемент списка: строку-кавычку до и после
# элемента списка, являющегося числом)
# дополнить это число нулём до двух целочисленных разрядов
# Например исходный список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов'].
# Тогда новый список: ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была',
# '"', '+05', '"', 'градусов'].
# Новый список вывести на экран
# После окончательного формирования нового списка - сделать на его основе строку, соединив все элементы
# Для примера выше: 'в "05" часов "17" минут температура воздуха была "+05" градусов'
# Вывести строку на экран.
# Обратите внимание на отсутствие "лишних" пробелов около кавычек, например "08" минут - правильно, а " 08 "
# минут - неправильно.
# Ваш алгоритм должен работать для любого подобного списка, а не только для приведенных примеров.
# Регулярные выражения не используем. Учимся парсить строку самостоятельно.
# Подтвердить правильность программы на трех приведенных тестах
# Формат вывода результата:
# Исходный, результирующий список и строку выводим на экран через print.
#
# Примеры/Тесты:
#
# Исходный список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Новый список + добавление элементов-кавычек: ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут',
# 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Окончательная строка: 'в "05" часов "17" минут температура воздуха была "+05" градусов'
#
# Исходный список: ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была',
# '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
# Новый список + добавление элементов-кавычек: ['примерно в', '"', '23', '"', 'часа', '"', '08', '"', 'минут',
# '"', '03', '"', 'секунд', 'температура', 'воздуха', 'была', '"', '-05', '"', 'градусов Цельсия', 'темп', 'воды',
# '"', '+12', '"', 'градусов', 'Цельсия']
# Окончательная строка: 'примерно в "23" часа "08" минут "03" секунд температура воздуха была "-05" градусов
# Цельсия, темп воды "+12" градусов Цельсия'
#
# Исходный список: ['+9', 'примерно в', '23', 'часа', '8', 'минут', '03', '05', 'секунд', 'температура',
# 'воздуха', 'была', '5', 'градусов Цельсия', 'темп','воды','+2.0','градусов','Цельсия' ,'-2', '11']
# Новый список + добавление элементов-кавычек: ['"', '+09', '"', 'примерно в', '"', '23', '"', 'часа', '"',
# '08', '"', 'минут', '"', '03', '"', '"', '05', '"', 'секунд', 'температура', 'воздуха', 'была', '"', '05',
# '"', 'градусов Цельсия', 'темп', 'воды', '+2.0', 'градусов', 'Цельсия', '"', '-02', '"', '"', '11', '"']
# "+09" примерно в "23" часа "08" минут "03" "05" секунд температура воздуха была "05" градусов Цельсия темп
# воды +2.0 градусов Цельсия "-02" "11"
#
# Задание упрощенное
#
# Если у вас не получается добавить правильно элементы-кавычки в новый список - упростим задачу. Обработайте
# строки-числа исходного спискав соответствии с условием задачи и вставьте кавычки прямо в эту же строку. Т.е.
# вы меняете элементы списка, не добавляя новых элементов. При этом вы можете создавать новый список или не
# делать этого.
# Если вы выбрали решать упрощенный вариант - напишите об этом комментариях в ПЗ.
#
# Задание повышенной сложности (задание со звездочкой)
#
# Не создавайте новый список. Это называется решить «in place». Измените существующий список, добавив
# элементы-кавычки в соответствии с условием задачи. Не добавляйте «лишних» элементов - только элементы-кавычки
# и не удаляйте из списка никаких элементов. Эта задача намного серьезнее, чем может сначала показаться.
# Если вы выбрали решать усложненный вариант - напишите об этом комментариях в ПЗ.

list_1 = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
list_2 = (['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была',
           '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия'])
list_3 = (['+9', 'примерно в', '23', 'часа', '8', 'минут', '03', '05', 'секунд', 'температура',
           'воздуха', 'была', '5', 'градусов Цельсия', 'темп', 'воды', '+2.0', 'градусов', 'Цельсия', '-2', '11'])

result_list = []

for i in range(len(list_1)):
    elem = list_1[i]
    if (elem[0] != '+' and elem[0] != '-') and not elem.isdigit():
        result_list.append(elem)

    else:

        if elem.isdigit():
            result_list.append('"')
            elem = '{:02d}'.format(int(elem))
            result_list.append(elem)
            result_list.append('"')
        elif elem[1:].isdigit():
            result_list.append('"')
            left_symbol = elem[:1]
            elem = '{}{:02d}'.format(left_symbol, int(elem[1:]))
            result_list.append(elem)
            result_list.append('"')
        else:
            result_list.append(elem)

print(result_list)

i = 0
message = ''
while i < len(result_list):
    elem = result_list[i]
    if elem == '"':
        next_elem = result_list[i+1]
        if (next_elem[0] == '+' or next_elem[0] == '-' and next_elem[1].isdigit()) or next_elem.isdigit():
            second_quotes = result_list[i+2]
            message += '{}{}{} '.format(elem, next_elem, second_quotes)
            i += 3

    else:
        message += '{} '.format(elem)
        i += 1


print(message)



result_list = []

for i in range(len(list_2)):
    elem = list_2[i]
    if (elem[0] != '+' and elem[0] != '-') and not elem.isdigit():
        result_list.append(elem)

    else:

        if elem.isdigit():
            result_list.append('"')
            elem = '{:02d}'.format(int(elem))
            result_list.append(elem)
            result_list.append('"')
        elif elem[1:].isdigit():
            result_list.append('"')
            left_symbol = elem[:1]
            elem = '{}{:02d}'.format(left_symbol, int(elem[1:]))
            result_list.append(elem)
            result_list.append('"')
        else:
            result_list.append(elem)

print(result_list)

i = 0
message = ''
while i < len(result_list):
    elem = result_list[i]
    if elem == '"':
        next_elem = result_list[i+1]
        if (next_elem[0] == '+' or next_elem[0] == '-' and next_elem[1].isdigit()) or next_elem.isdigit():
            second_quotes = result_list[i+2]
            message += '{}{}{} '.format(elem, next_elem, second_quotes)
            i += 3

    else:
        message += '{} '.format(elem)
        i += 1


print(message)

result_list = []

for i in range(len(list_3)):
    elem = list_3[i]
    if (elem[0] != '+' and elem[0] != '-') and not elem.isdigit():
        result_list.append(elem)

    else:

        if elem.isdigit():
            result_list.append('"')
            elem = '{:02d}'.format(int(elem))
            result_list.append(elem)
            result_list.append('"')
        elif elem[1:].isdigit():
            result_list.append('"')
            left_symbol = elem[:1]
            elem = '{}{:02d}'.format(left_symbol, int(elem[1:]))
            result_list.append(elem)
            result_list.append('"')
        else:
            result_list.append(elem)

print(result_list)

i = 0
message = ''
while i < len(result_list):
    elem = result_list[i]
    if elem == '"':
        next_elem = result_list[i+1]
        if (next_elem[0] == '+' or next_elem[0] == '-' and next_elem[1].isdigit()) or next_elem.isdigit():
            second_quotes = result_list[i+2]
            message += '{}{}{} '.format(elem, next_elem, second_quotes)
            i += 3

    else:
        message += '{} '.format(elem)
        i += 1


print(message)