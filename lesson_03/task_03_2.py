# 2. [Задача со звездочкой]: усложненный вариант задания 1. Написать функцию num_translate_adv, которая
# корректно обработает числительные, начинающиеся с заглавной буквы. Если перевод сделать невозможно,
# вернуть объект None.
# Условие задачи
# Техническое задание
#
# Функция возвращает строку перевод. Или возвращает None, если перевести невозможно.
# Считаем, что только первая буква может быть заглавной.
# Обратите внимание, что функция возвращает перевод в том же регистре как и приняла.
# Выполнить вызов функции для нескольких слов и вывести на экран результаты.
# Примеры/Тесты:
#
#
# >>> num_translate_adv("One")
# "Один"
# >>> num_translate_adv("two")
# "два"


def num_translate_adv(en_num):
    dictionary = {'one': 'один',
                  'two': 'два',
                  'three': 'три',
                  'four': 'четыре',
                  'five': 'пять',
                  'six': 'шесть',
                  'seven': 'семь',
                  'eight': 'восемь',
                  'nine': 'девять',
                  'ten': 'десять',
                  'One': 'Один',
                  'Two': 'Два',
                  'Three': 'Три',
                  'Four': 'Четыре',
                  'Five': 'Пять',
                  'Six': 'Шесть',
                  'Seven': 'Семь',
                  'Eight': 'Восемь',
                  'Nine': 'Девять',
                  'Ten': 'Десять'
                  }
    # en_num = en_num.lower()
    answer = dictionary.get(en_num)
    return answer


question = input('Введите число, которое надо перевести: ')
ru_num = num_translate_adv(question)
print(ru_num)

#Запускается и работает и с прямым указанием числа в виде аргумента

# print(num_translate_adv('tWo')) # None
# print(num_translate_adv('Four')) # Четыре
# print(num_translate_adv('nine')) # девять